---
- name: Configure Cobbler on Rocky Linux 9
  hosts: Greg-rocky9
  become: true
  vars:
    cobbler_repo_name: "example_repo"
    cobbler_repo_url: "https://example.com/repo"
    cobbler_gpg_key_url: "https://example.com/repo-key.gpg"
    cobbler_gpg_key_path: "/etc/pki/rpm-gpg/example-repo-key.gpg"
    cobbler_repo_creds_path: "/etc/cobbler/example_repo_creds"
    cobbler_repo_user: "repo_user"
    cobbler_repo_password: "repo_password"

  tasks:
    - name: Install Cobbler and required packages
      ansible.builtin.dnf:
        name:
          - cobbler
          - cobbler-web
          - rsync
          - httpd
        state: present

    - name: Enable and start Cobbler and HTTPD services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - cobblerd
        - httpd

    - name: Download the GPG key
      ansible.builtin.get_url:
        url: "{{ cobbler_gpg_key_url }}"
        dest: "{{ cobbler_gpg_key_path }}"
        mode: '0644'

    - name: Create Cobbler repo credentials file
      ansible.builtin.copy:
        dest: "{{ cobbler_repo_creds_path }}"
        content: |
          user:{{ cobbler_repo_user }}
          password:{{ cobbler_repo_password }}
        mode: '0600'

    - name: Add the repository to Cobbler
      ansible.builtin.command: >
        cobbler repo add
        --name={{ cobbler_repo_name }}
        --mirror={{ cobbler_repo_url }}
        --mirror-locally=Y
        --arch=x86_64
        --breed=rsync
        --gpg-key={{ cobbler_gpg_key_path }}
      args:
        creates: "/var/lib/cobbler/repo_mirror/{{ cobbler_repo_name }}"

    - name: Add YUM options for the repository
      ansible.builtin.command: >
        cobbler repo edit
        --name={{ cobbler_repo_name }}
        --yumopts="--config {{ cobbler_repo_creds_path }}"

    - name: Synchronize the repository
      ansible.builtin.command: cobbler reposync
      register: sync_output

    - name: Display repository sync output
      ansible.builtin.debug:
        var: sync_output.stdout

    - name: Ensure SELinux allows Cobbler operations
      ansible.builtin.seboolean:
        name: "httpd_can_network_connect"
        state: yes
        persistent: yes

    - name: Open firewall ports for Cobbler
      ansible.builtin.firewalld:
        service: "http"
        state: enabled
        permanent: yes
      notify:
        - Reload firewalld

  handlers:
    - name: Reload firewalld
      ansible.builtin.service:
        name: firewalld
        state: reloaded
